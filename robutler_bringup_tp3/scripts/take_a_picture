#!/usr/bin/env python3

import os
import rospy
from sensor_msgs.msg import Image
from cv_bridge import CvBridge
import cv2
from rospkg import RosPack

class CameraListener:
    def __init__(self):
        self.bridge = CvBridge()
        self.image_sub = rospy.Subscriber("/camera/rgb/top_image_raw", Image, self.image_callback)
        self.image_saved = False

    def image_callback(self, data):
        if not self.image_saved:
            try:
                cv_image = self.bridge.imgmsg_to_cv2(data, "bgr8")
                package_name = "robutler_bringup_tp3"
                rospack = RosPack()
                package_path = rospack.get_path(package_name)
                directory_path = os.path.join(package_path, "photos")
                file_name="Tentativa14.jpg"
                os.chdir(directory_path)      
                cv2.imwrite(file_name, cv_image)
                rospy.loginfo("Image saved successfully as: " + file_name + ".")
                self.image_saved= True
                rospy.signal_shutdown("Foto completa. Término de função")
            except Exception as e:
                rospy.logerr("Error processing image: {}".format(e))

if __name__ == '__main__':
    rospy.init_node('camera_listener_node', anonymous=True)
    camera_listener = CameraListener()
    rospy.spin()